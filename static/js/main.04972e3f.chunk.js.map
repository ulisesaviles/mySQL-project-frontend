{"version":3,"sources":["img/logo.png","config/queries.js","components/Table.js","config/sampleResponse.js","App.js","reportWebVitals.js","index.js"],"names":["type","description","Table","props","className","headers","map","header","data","row","indexOf","departmentId","name","supervisorId","App","useState","selectedQueryIndex","setSelectedQueryIndex","doneQuery","setDoneQuery","Date","startDate","setStartDate","endDate","setEndDate","searchById","setSearchById","inputValue","setInputValue","sampleResponse","queryResponse","setQueryResponse","responseMsg","setResponseMsg","src","logo","alt","queries","query","onClick","newIndex","selected","onChange","date","value","str","test","charAt","length","onlyuNumbers","target","substr","placeholder","id","dataToPost","trim","start","end","getFullYear","getMonth","getDate","console","log","axios","method","url","then","response","catch","e","handleQuery","Object","keys","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4JAAe,MAA0B,iCCA1B,GACb,CAEEA,KAAM,QACNC,YACE,6HAEJ,CAEED,KAAM,QACNC,YACE,uHAEJ,CAEED,KAAM,cACNC,YACE,4FAEJ,CAEED,KAAM,KACNC,YACE,gFAEJ,CAEED,KAAM,QACNC,YACE,2GAEJ,CAEED,KAAM,OACNC,YACE,6GAEJ,CAEED,KAAM,QACNC,YACE,mFAEJ,CAEED,KAAM,cACNC,YACE,8FAEJ,CAEED,KAAM,KACNC,YACE,0GAEJ,CAEED,KAAM,cACNC,YACE,mFAEJ,CAEED,KAAM,QACNC,YACE,yJAEJ,CAEED,KAAM,QACNC,YACE,wEAEJ,CAEED,KAAM,QACNC,YACE,2HAEJ,CAEED,KAAM,QACNC,YACE,iGAEJ,CAEED,KAAM,QACNC,YACE,iGAEJ,CAEED,KAAM,KACNC,YACE,mEAEJ,CAEED,KAAM,QACNC,YACE,iFAEJ,CAEED,KAAM,KACNC,YACE,kEAEJ,CAEED,KAAM,QACNC,YACE,qGAEJ,CAEED,KAAM,QACNC,YACE,yGAEJ,CAEED,KAAM,KACNC,YACE,oEAEJ,CAEED,KAAM,QACNC,YACE,0FAEJ,CAEED,KAAM,KACNC,YACE,yGAEJ,CAEED,KAAM,KACNC,YACE,qHAEJ,CAEED,KAAM,QACNC,YACE,yGAEJ,CAEED,KAAM,QACNC,YACE,wEAEJ,CAEED,KAAM,QACNC,YACE,gFAEJ,CAEED,KAAM,KACNC,YACE,+FAEJ,CAEED,KAAM,QACNC,YACE,0JAEJ,CAEED,KAAM,QACNC,YACE,8F,eChLOC,EAAQ,SAACC,GACpB,OACE,sBAAKC,UAAU,QAAf,UACE,qBAAKA,UAAU,WAAf,SACGD,EAAME,QAAQC,KAAI,SAACC,GAAD,OACjB,qBAAKH,UAAU,kBAAf,SACE,mBAAGA,UAAU,0BAAb,SAAwCG,WAI7CJ,EAAMK,KAAKF,KAAI,SAACG,GAAD,OACd,qBAAKL,UAAU,WAAf,SACGD,EAAME,QAAQC,KAAI,SAACC,GAAD,OACjB,qBAAKH,UAAS,mBAAcD,EAAMK,KAAKE,QAAQD,GAAO,GAAtD,SACE,mBAAGL,UAAU,WAAb,SAAyBK,EAAIF,mBCjB5B,GACb,CACEI,aAAc,EACdC,KAAM,uBACNC,aAAc,IAEhB,CACEF,aAAc,EACdC,KAAM,YACNC,aAAc,IAEhB,CACEF,aAAc,EACdC,KAAM,mCACNC,aAAc,GAEhB,CAAEF,aAAc,EAAGC,KAAM,WAAYC,aAAc,GACnD,CACEF,aAAc,EACdC,KAAM,gBACNC,aAAc,GAEhB,CAAEF,aAAc,EAAGC,KAAM,UAAWC,aAAc,IAClD,CACEF,aAAc,EACdC,KAAM,mCACNC,aAAc,K,kCCuOHC,G,MA9OH,WAAM,MAEoCC,mBAAS,GAF7C,mBAETC,EAFS,KAEWC,EAFX,OAGkBF,oBAAS,GAH3B,mBAGTG,EAHS,KAGEC,EAHF,OAIkBJ,mBAAS,IAAIK,MAJ/B,mBAITC,EAJS,KAIEC,EAJF,OAKcP,mBAAS,IAAIK,MAL3B,mBAKTG,EALS,KAKAC,EALA,OAMoBT,oBAAS,GAN7B,mBAMTU,EANS,KAMGC,EANH,OAOoBX,mBAAS,IAP7B,mBAOTY,EAPS,KAOGC,EAPH,OAQ0Bb,mBAASc,GARnC,mBAQTC,EARS,KAQMC,EARN,OASsBhB,mBACpC,iDAVc,mBASTiB,EATS,KASIC,EATJ,KAwFhB,OACE,sBAAK7B,UAAU,MAAf,UACE,iCACE,qBAAK8B,IAAKC,EAAM/B,UAAU,OAAOgC,IAAI,WAEvC,8BACGC,EAAQ/B,KAAI,SAACgC,GAAD,OACX,sBACEC,QAAS,WA1EO,IAACC,IA2EGH,EAAQ3B,QAAQ4B,GA1E5CL,EAAe,iDACfhB,EAAsBuB,GACtBrB,GAAa,GACbS,EAAc,KAyENxB,UACEiC,EAAQ3B,QAAQ4B,KAAWtB,EACvB,wBACA,SAPR,sBAUYqB,EAAQ3B,QAAQ4B,GAAS,UAKzC,qBAAKlC,UAAU,UAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,qBAAIA,UAAU,eAAd,sBAAuCY,EAAqB,KAC5D,oBAAIZ,UAAU,mBAAd,4CACA,mBAAGA,UAAU,cAAb,SACGiC,EAAQrB,GAAoBf,iBAIjC,sBAAKG,UAAU,mBAAf,UACE,sBAAKA,UAAU,uCAAf,UACE,oBAAIA,UAAU,+BAAd,sBACA,sBAAKA,UAAU,kBAAf,UACwC,UAArCiC,EAAQrB,GAAoBhB,MACQ,SAArCqC,EAAQrB,GAAoBhB,KAC1B,sBAAKI,UAAU,iBAAf,UACE,oBAAIA,UAAU,aAAd,2CAGA,sBAAKA,UAAU,iBAAf,UACE,cAAC,IAAD,CACEqC,SAAUpB,EACVqB,SAAU,SAACC,GAAD,OAAUrB,EAAaqB,IACjCvC,UAAU,cAEZ,mBAAGA,UAAU,IAAb,eACA,cAAC,IAAD,CACEqC,SAAUlB,EACVmB,SAAU,SAACC,GAAD,OAAUnB,EAAWmB,IAC/BvC,UAAU,oBAKhB,6BAEoC,gBAArCiC,EAAQrB,GAAoBhB,MACQ,SAArCqC,EAAQrB,GAAoBhB,KAC1B,sBAAKI,UAAU,iBAAf,UACE,oBAAIA,UAAU,aAAd,qEAGA,mBAAGA,UAAU,WAAb,yBACA,sBAAKA,UAAU,kBAAf,UACE,qBACEmC,QAAS,WACPb,GAAc,GACdE,EAAc,KAEhBxB,UAAS,oBACNqB,EAAqC,GAAxB,uBANlB,oBAWA,qBACEc,QAAS,WACPb,GAAc,GACdE,EAAc,KAEhBxB,UAAS,oBACPqB,EAAa,sBAAwB,IANzC,mBAYF,uBACEiB,SAAU,SAACE,GArKd,IAACC,EAsKQpB,EApGL,SAACE,IAED,KAAfA,GADO,aACiBmB,KAAKnB,KAC/BC,EAAcD,EAAWoB,OAAOpB,EAAWqB,OAAS,IAkGhCC,CAAaL,EAAMM,OAAON,QAvKhCC,EAyKeD,EAAMM,OAAON,MAxKxC,eAAeE,KAAKD,GACtBjB,EAAciB,GAEdjB,EAAciB,EAAIM,OAAO,EAAGN,EAAIG,OAAS,MAwKzBI,YAAW,qBACT3B,EAAa,KAAO,SADX,qBAGXrB,UAAU,QACViD,GAAG,QACHT,MAAOjB,IAET,mBAAGvB,UAAU,WAAb,0EAKF,6BAEoC,OAArCiC,EAAQrB,GAAoBhB,KAC3B,oBAAGI,UAAU,kBAAb,yBACeY,EAAqB,EADpC,wBAIA,gCAGJ,qBACEZ,UAAU,YACVmC,QAAS,YArLH,WAClBN,EAAe,eACf,IAAIqB,EAAa,GAEjB,GAAyC,gBAArCjB,EAAQrB,GAAoBhB,KAC9BsD,EAAU,eAAqB7B,EAAa,GAAKE,EAAW4B,OAC5DD,EAAU,aAAmB7B,EAAaE,EAAa,OAClD,GAAyC,UAArCU,EAAQrB,GAAoBhB,KAAkB,CACvD,IAAIwD,EAAQ,IAAIpC,KAAKC,GACjBoC,EAAM,IAAIrC,KAAKG,GACnB+B,EAAU,UAAV,UAEOE,EAAME,cAFb,YAE8BF,EAAMG,WAFpC,YAEkDH,EAAMI,WACxDN,EAAU,QAAV,UAEOG,EAAIC,cAFX,YAE4BD,EAAIE,WAFhC,YAE8CF,EAAIG,gBAC7C,GAAyC,SAArCvB,EAAQrB,GAAoBhB,KAAiB,CACtDsD,EAAU,eAAqB7B,EAAa,GAAKE,EAAW4B,OAC5DD,EAAU,aAAmB7B,EAAaE,EAAa,EACvD,IAAI6B,EAAQ,IAAIpC,KAAKC,GACjBoC,EAAM,IAAIrC,KAAKG,GACnB+B,EAAU,UAAV,UAA6BE,EAAME,cAAnC,YACEF,EAAMG,WAAa,EADrB,YAEIH,EAAMI,WACVN,EAAU,QAAV,UAA2BG,EAAIC,cAA/B,YACED,EAAIE,WAAa,EADnB,YAEIF,EAAIG,WAEVC,QAAQC,IAAIR,GAEZS,IAAM,CACJC,OAAQ,OACRC,IAAI,2BAAD,OAA6BjD,EAAqB,GACrDR,KAAM,CACJA,KAAM8C,KAGPY,MAAK,SAACC,GACDA,EAAS3D,OAAS,IACpBuB,EAAiBoC,EAAS3D,MAC1BW,GAAa,IAEbc,EAAe,+CAGlBmC,OAAM,SAACC,GACNR,QAAQC,IAAIO,GACZpC,EAAe,2BAuILqC,IAHJ,+BAUF,sBAAKlE,UAAU,uCAAf,UACE,oBAAIA,UAAU,oBAAd,uBACA,qBAAKA,UAAU,iBAAf,SACGc,EACC,cAAC,EAAD,CACEb,QAASkE,OAAOC,KAAK1C,EAAc,IACnCtB,KAAMsB,IAGR,4BAAIE,sBC1OPyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.04972e3f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.045b4c32.png\";","export default [\r\n  {\r\n    //1\r\n    type: \"dates\",\r\n    description:\r\n      \"Mostrar la informacion del cliente con mayor frecuencia en reparaciones que se le hayan atendido en un periodo de tiempo.\",\r\n  },\r\n  {\r\n    //2\r\n    type: \"dates\",\r\n    description:\r\n      \"Mostrar la informacion de las promociones aplicadas en el departamento mecanico en un periodo de fechas especifico.\",\r\n  },\r\n  {\r\n    //3\r\n    type: \"departments\",\r\n    description:\r\n      \"Mostrar la informacion del inventario de refacciones que tiene cada producto registrado.\",\r\n  },\r\n  {\r\n    //4\r\n    type: null,\r\n    description:\r\n      \"Mostrar las ventas obtenidas con respecto al serivicio de solo diagnosticos.\",\r\n  },\r\n  {\r\n    //5\r\n    type: \"dates\",\r\n    description:\r\n      \"Mostrar entre  el periodo de rango de fechas el numero de atenciones para cada departamento del taller.\",\r\n  },\r\n  {\r\n    //6\r\n    type: \"both\",\r\n    description:\r\n      \"Mostrar las ganacias obtenidas en un rango de fechas especifico en base a un despartamento en particular.\",\r\n  },\r\n  {\r\n    //7\r\n    type: \"dates\",\r\n    description:\r\n      \"Mostrar el empleado que mayor ganancia obtuvo en un rango de fechas especifico.\",\r\n  },\r\n  {\r\n    //8\r\n    type: \"departments\",\r\n    description:\r\n      \"Mostrar e listado de supervisores y sus supervisados en base a un departamento especifico.\",\r\n  },\r\n  {\r\n    //9\r\n    type: null,\r\n    description:\r\n      \"Mostrar el listado de clientes registrados junto con los automoviles que tiene registrados en sistema.\",\r\n  },\r\n  {\r\n    //10\r\n    type: \"departments\",\r\n    description:\r\n      \"Mostrar las reparaciones mas concurrentes en base a un departamento especifico.\",\r\n  },\r\n  {\r\n    //11\r\n    type: \"dates\",\r\n    description:\r\n      \"Mostrar el departamento que presenta el mayor consumo de refacciones en un periodo de fecha determinado y muestr el numero de refacciones utilizadas.\",\r\n  },\r\n  {\r\n    //12\r\n    type: \"dates\",\r\n    description:\r\n      \"Mostrar las promociones vigentes por un rango de fechas determinado.\",\r\n  },\r\n  {\r\n    //13\r\n    type: \"dates\",\r\n    description:\r\n      \"Mostrar las garantias que se han presentado en los servicios y que costo ha generado por un rango de fechas especifico.\",\r\n  },\r\n  {\r\n    //14\r\n    type: \"dates\",\r\n    description:\r\n      \"Mostrar el departameto con mayor afluencia de reparaciones en un rango de fechas determinado.\",\r\n  },\r\n  {\r\n    //15\r\n    type: \"dates\",\r\n    description:\r\n      \"Mostrar el departameto con menor afluencia de reparaciones por un rango de fecha determinado.\",\r\n  },\r\n  {\r\n    //16\r\n    type: null,\r\n    description:\r\n      \"Mostrar el consumo de refacciones clasificado por departamento.\",\r\n  },\r\n  {\r\n    //17\r\n    type: \"dates\",\r\n    description:\r\n      \"Mostrar las ganacias obtenidas del taller por un rango de fechas determinado.\",\r\n  },\r\n  {\r\n    //18\r\n    type: null,\r\n    description:\r\n      \"Mostrar el listado de empleados clasificado por departamentos.\",\r\n  },\r\n  {\r\n    //19\r\n    type: \"dates\",\r\n    description:\r\n      \"Mostrar el las caracteristicas de los automoviles registrado en un periodo de tiempo determinado.\",\r\n  },\r\n  {\r\n    //20\r\n    type: \"dates\",\r\n    description:\r\n      \"Mostrar los clientes que solo realizaron servicios de diagnostico en un periodo de fecha determinado.\",\r\n  },\r\n  {\r\n    //21\r\n    type: null,\r\n    description:\r\n      \"Mostrar el cliente con el mayor gasto en reparaciones realizado.\",\r\n  },\r\n  {\r\n    //22\r\n    type: \"dates\",\r\n    description:\r\n      \"Mostrar el automovil con el mayor gasto realizado en un periodo de tiempo determinado.\",\r\n  },\r\n  {\r\n    //23\r\n    type: null,\r\n    description:\r\n      \"Mostrar cual es la refaccion mas vendida del departamento de refacciones y cuanto genera de ganancia.\",\r\n  },\r\n  {\r\n    //24\r\n    type: null,\r\n    description:\r\n      \"Mostrar el departamento con mayor numero de garantias aplicadas y cuanto suma de gasto debido a dichas garantias.\",\r\n  },\r\n  {\r\n    //25\r\n    type: \"dates\",\r\n    description:\r\n      \"Mostrar el cliente con mayor tiempo de no visitar el taller en base a un rango de fechas determiando.\",\r\n  },\r\n  {\r\n    //26\r\n    type: \"dates\",\r\n    description:\r\n      \"Mostrar la promocion mas aplicada en un rango de fechas determinado.\",\r\n  },\r\n  {\r\n    //27\r\n    type: \"dates\",\r\n    description:\r\n      \"Mostrar el numero de promociones vencidas en un rango de fechas determinado.\",\r\n  },\r\n  {\r\n    //28\r\n    type: null,\r\n    description:\r\n      \"Mostrar los datos del trabajador con mayor garantias aplicadas de los servicio que realizo.\",\r\n  },\r\n  {\r\n    //29\r\n    type: \"dates\",\r\n    description:\r\n      \"Mostrar el nombre de cliente y el nombre del automovil que haya presentado el mayor numero de servicios aplicados en un periodo de fechas determinado.\",\r\n  },\r\n  {\r\n    //30\r\n    type: \"dates\",\r\n    description:\r\n      \"Mostrar los servicios con menores ganacias obtenidas en un periodo de fechas determiando.\",\r\n  },\r\n];\r\n","// Styles\r\nimport \"../App.css\";\r\n\r\nexport const Table = (props) => {\r\n  return (\r\n    <div className=\"table\">\r\n      <div className=\"tableRow\">\r\n        {props.headers.map((header) => (\r\n          <div className=\"cell cellHeader\">\r\n            <p className=\"cellText cellTextHeader\">{header}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {props.data.map((row) => (\r\n        <div className=\"tableRow\">\r\n          {props.headers.map((header) => (\r\n            <div className={`cell cell${props.data.indexOf(row) % 2}`}>\r\n              <p className=\"cellText\">{row[header]}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","export default [\r\n  {\r\n    departmentId: 1,\r\n    name: \"Carroceria y pintura\",\r\n    supervisorId: 12,\r\n  },\r\n  {\r\n    departmentId: 2,\r\n    name: \"Electrico\",\r\n    supervisorId: 21,\r\n  },\r\n  {\r\n    departmentId: 3,\r\n    name: \"Alineacion y balanceo suspension\",\r\n    supervisorId: 9,\r\n  },\r\n  { departmentId: 4, name: \"Mecanico\", supervisorId: 2 },\r\n  {\r\n    departmentId: 5,\r\n    name: \"Refaccionaria\",\r\n    supervisorId: 1,\r\n  },\r\n  { departmentId: 6, name: \"Almacen\", supervisorId: 23 },\r\n  {\r\n    departmentId: 7,\r\n    name: \"Servicio a cliente y diagnostico\",\r\n    supervisorId: 11,\r\n  },\r\n];\r\n","// React imports\nimport { useState } from \"react\";\n\n// Local imports\nimport logo from \"./img/logo.png\";\nimport queries from \"./config/queries\";\nimport { Table } from \"./components/Table.js\";\nimport sampleResponse from \"./config/sampleResponse\";\n\n// Styles\nimport \"./App.css\";\n\n// Api-related\nimport axios from \"axios\";\n\n// Custom calendars\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst App = () => {\n  // Const\n  const [selectedQueryIndex, setSelectedQueryIndex] = useState(0);\n  const [doneQuery, setDoneQuery] = useState(false);\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const [searchById, setSearchById] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [queryResponse, setQueryResponse] = useState(sampleResponse);\n  const [responseMsg, setResponseMsg] = useState(\n    \"Realiza la consulta para obtener un resultado\"\n  );\n\n  // Functions\n  const checkStr = (str) => {\n    if (/^[a-zA-Z ]*$/.test(str)) {\n      setInputValue(str);\n    } else {\n      setInputValue(str.substr(0, str.length - 1));\n    }\n  };\n\n  const handleChangeQuery = (newIndex) => {\n    setResponseMsg(\"Realiza la consulta para obtener un resultado\");\n    setSelectedQueryIndex(newIndex);\n    setDoneQuery(false);\n    setInputValue(\"\");\n  };\n\n  const handleQuery = () => {\n    setResponseMsg(\"Cargando...\");\n    let dataToPost = {};\n    // Get input values\n    if (queries[selectedQueryIndex].type === \"departments\") {\n      dataToPost[\"departmentName\"] = searchById ? \"\" : inputValue.trim();\n      dataToPost[\"departmentId\"] = searchById ? inputValue : 0;\n    } else if (queries[selectedQueryIndex].type === \"dates\") {\n      let start = new Date(startDate);\n      let end = new Date(endDate);\n      dataToPost[\n        \"startDate\"\n      ] = `${start.getFullYear()}-${start.getMonth()}-${start.getDate()}`;\n      dataToPost[\n        \"endDate\"\n      ] = `${end.getFullYear()}-${end.getMonth()}-${end.getDate()}`;\n    } else if (queries[selectedQueryIndex].type === \"both\") {\n      dataToPost[\"departmentName\"] = searchById ? \"\" : inputValue.trim();\n      dataToPost[\"departmentId\"] = searchById ? inputValue : 0;\n      let start = new Date(startDate);\n      let end = new Date(endDate);\n      dataToPost[\"startDate\"] = `${start.getFullYear()}-${\n        start.getMonth() + 1\n      }-${start.getDate()}`;\n      dataToPost[\"endDate\"] = `${end.getFullYear()}-${\n        end.getMonth() + 1\n      }-${end.getDate()}`;\n    }\n    console.log(dataToPost);\n    // Make query\n    axios({\n      method: \"post\",\n      url: `localhost:3000/api/query${selectedQueryIndex + 1}`,\n      data: {\n        data: dataToPost,\n      },\n    })\n      .then((response) => {\n        if (response.data !== []) {\n          setQueryResponse(response.data);\n          setDoneQuery(true);\n        } else {\n          setResponseMsg(\"Ninguna tabla coincide con el input dado\");\n        }\n      })\n      .catch((e) => {\n        console.log(e);\n        setResponseMsg(\"Error de conexión\");\n      });\n  };\n\n  const onlyuNumbers = (inputValue) => {\n    const re = /^[1-7\\b]+$/;\n    if (inputValue === \"\" || re.test(inputValue)) {\n      setInputValue(inputValue.charAt(inputValue.length - 1));\n    }\n  };\n\n  // Render\n  return (\n    <div className=\"app\">\n      <header>\n        <img src={logo} className=\"logo\" alt=\"logo\" />\n      </header>\n      <nav>\n        {queries.map((query) => (\n          <div\n            onClick={() => {\n              handleChangeQuery(queries.indexOf(query));\n            }}\n            className={\n              queries.indexOf(query) === selectedQueryIndex\n                ? \"navBtn navBtnSelected\"\n                : \"navBtn\"\n            }\n          >\n            Consulta {queries.indexOf(query) + 1}\n          </div>\n        ))}\n      </nav>\n\n      <div className=\"content\">\n        <div className=\"contentContainer\">\n          <div className=\"contentHeader\">\n            <h1 className=\"contentTitle\">Consulta {selectedQueryIndex + 1}</h1>\n            <h2 className=\"descriptionTitle\">Descripción de la consulta:</h2>\n            <p className=\"description\">\n              {queries[selectedQueryIndex].description}\n            </p>\n          </div>\n\n          <div className=\"queriesContainer\">\n            <div className=\"contentSubsection contentSubsection1\">\n              <h1 className=\"subContainerTitle queryTitle\">Consulta</h1>\n              <div className=\"inputsContainer\">\n                {queries[selectedQueryIndex].type === \"dates\" ||\n                queries[selectedQueryIndex].type === \"both\" ? (\n                  <div className=\"inputContainer\">\n                    <h3 className=\"inputTitle\">\n                      Selecciona el rango de fechas\n                    </h3>\n                    <div className=\"datesContainer\">\n                      <DatePicker\n                        selected={startDate}\n                        onChange={(date) => setStartDate(date)}\n                        className=\"dateInput\"\n                      />\n                      <p className=\"a\">a</p>\n                      <DatePicker\n                        selected={endDate}\n                        onChange={(date) => setEndDate(date)}\n                        className=\"dateInput\"\n                      />\n                    </div>\n                  </div>\n                ) : (\n                  <></>\n                )}\n                {queries[selectedQueryIndex].type === \"departments\" ||\n                queries[selectedQueryIndex].type === \"both\" ? (\n                  <div className=\"inputContainer\">\n                    <h3 className=\"inputTitle\">\n                      Ingresa información sobre el departamento que buscas\n                    </h3>\n                    <p className=\"searchBy\">Buscar por:</p>\n                    <div className=\"toggleContainer\">\n                      <div\n                        onClick={() => {\n                          setSearchById(false);\n                          setInputValue(\"\");\n                        }}\n                        className={`toggleItem${\n                          !searchById ? \" toggleItemSelected\" : \"\"\n                        }`}\n                      >\n                        Nombre\n                      </div>\n                      <div\n                        onClick={() => {\n                          setSearchById(true);\n                          setInputValue(\"\");\n                        }}\n                        className={`toggleItem${\n                          searchById ? \" toggleItemSelected\" : \"\"\n                        }`}\n                      >\n                        ID\n                      </div>\n                    </div>\n                    <input\n                      onChange={(value) => {\n                        if (searchById) {\n                          onlyuNumbers(value.target.value);\n                        } else {\n                          checkStr(value.target.value);\n                        }\n                      }}\n                      placeholder={`Ingresa el ${\n                        searchById ? \"ID\" : \"nombre\"\n                      } del departamento`}\n                      className=\"input\"\n                      id=\"input\"\n                      value={inputValue}\n                    />\n                    <p className=\"reminder\">\n                      (Recuerda sólo ingresar letras sin acentos y espacios)\n                    </p>\n                  </div>\n                ) : (\n                  <></>\n                )}\n                {queries[selectedQueryIndex].type === null ? (\n                  <p className=\"noInputRequired\">\n                    La consulta {selectedQueryIndex + 1} no requiere input\n                  </p>\n                ) : (\n                  <></>\n                )}\n              </div>\n              <div\n                className=\"submitBtn\"\n                onClick={() => {\n                  handleQuery();\n                }}\n              >\n                Hacer consulta\n              </div>\n            </div>\n\n            <div className=\"contentSubsection contentSubsection2\">\n              <h1 className=\"subContainerTitle\">Respuesta</h1>\n              <div className=\"tableContainer\">\n                {doneQuery ? (\n                  <Table\n                    headers={Object.keys(queryResponse[0])}\n                    data={queryResponse}\n                  ></Table>\n                ) : (\n                  <p>{responseMsg}</p>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}